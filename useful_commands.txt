-- make config commands
  $ make menuconfig
  $ make linux-menuconfig

-- Network configuration
  System configuration  ---> 
  	 ()  Network interface to configure through DHCP
  	 [*] Run a getty (login prompt) after boot  --->
  		  (ttyS0) TTY port

  Device Drivers  ---> 
  	[*] Network device support  --->    
  		[*]   Ethernet driver support  ---> 
  		<*>     Intel(R) PRO/1000 Gigabit Ethernet support 

-- qemu start
  sudo qemu-system-i386 --device e1000,netdev=eth0,mac=aa:bb:cc:dd:ee:ff \
  	--netdev tap,id=eth0,script=buildroot/qemu-ifup \
  	--kernel buildroot/output/images/bzImage \
  	--hda buildroot/output/images/rootfs.ext2 \
  	--nographic \
  	--append "console=ttyS0 root=/dev/sda" 

--kill qemu
  $ killall qemu-system-i386

-- before compile
export LINUX_OVERRIDE_SRCDIR=/home/labredes/linuxdistro/linux-4.12.4/


--clear linux build
$ rm output/build/linux-custom/.stamp_built
$ rm output/build/linux-custom/.stamp_configured
$ rm output/build/linux-custom/.stamp_rsynced 

--move linux-menuconfig
cp buildroot/output/build/linux-custom/.config linux-4.12.4/arch/x86/configs/qemu_x86_custom_defconfig 

-- driver git
  $ git clone  https://github.com/Laboratorio-de-SISOP/hello_world_driver.git
  #Install hello world driver
  make -C $BASE_DIR/../../hello_driver/

-- disk image creation   
    dd if=/dev/zero of=sdb.bin bs=512 count=2097152


-- qemu with alternate disk image
  sudo qemu-system-i386 --device e1000,netdev=eth0,mac=aa:bb:cc:dd:ee:ff \
  	--netdev tap,id=eth0,script=buildroot/qemu-ifup \
  	--kernel buildroot/output/images/bzImage \
  	--hda buildroot/output/images/rootfs.ext2 \
  	--nographic \
  	--append "console=ttyS0 root=/dev/sda" \
    --hdb sdb.bin

-- Set scheduler
    echo sstf > /sys/block/sdb/queue/scheduler

-- verify scheduler
    cat /sys/block/sdb/queue/scheduler




